@using MVC.ViewModels;

@{
    ViewData["Title"] = "Home Page";
}


@model UserViewModel

<div class="container">
    <div class="row">
        <div class="col-md-6">
            <h3>
                LocalBet helps you make bets with your friends.
            </h3>
            <img src="~/Content/images/handshake-icon.png" width="100" />
        </div>
        <div class="col-md-6">
            <form asp-controller="User" asp-action="CreateUser" id="createUserForm" method="post">
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group label-floating">
                            @Html.LabelFor(m => m.FirstName, new { @class = "control-label" })
                            @Html.TextBoxFor(m => m.FirstName, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.FirstName, null, new { @class = "help-block" })
                        </div>
                    </div>
                    <div class="col-md-6 ">
                        <div class="form-group label-floating">
                            @Html.LabelFor(m => m.LastName, new { @class = "control-label" })
                            @Html.TextBoxFor(m => m.LastName, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.LastName, null, new { @class = "help-block" })
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <div class="form-group label-floating">
                            @Html.LabelFor(m => m.UserName, new { @class = "control-label" })
                            @Html.TextBoxFor(m => m.UserName, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.UserName, null, new { @class = "help-block" })
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <div class="form-group label-floating">
                            @Html.LabelFor(m => m.Email, new { @class = "control-label" })
                            @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.Email, null, new { @class = "help-block" })
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <div class="form-group label-floating">
                            @Html.LabelFor(m => m.Password1, new { @class = "control-label" })
                            @Html.PasswordFor(m => m.Password1, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.Password1, null, new { @class = "help-block" })
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <div class="form-group label-floating">
                            @Html.LabelFor(m => m.Password2, new { @class = "control-label" })
                            @Html.PasswordFor(m => m.Password2, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.Password2, null, new { @class = "help-block" })
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <button type="submit" class="btn btn-primary pull-right">Register</button>
                    </div>
                </div>
            </form>
            <script>
                // Setup validation of the "createUserForm"
                $(document).ready(function() {
                    $("#createUserForm").validate({
                        rules: {
                            FirstName: {
                                required: true
                            },
                            LastName: {
                                required: true
                            },
                            UserName: {
                                required: true
                            },
                            Email: {
                                required: true
                            },
                            Password1: {
                                required: true
                            },
                            Password2: {
                                required: true,
                                equalTo: "#Password1"
                            }
                        },

                        messages: {
                            FirstName: {
                                required: "@Html.Raw(UserViewModelErrors.ErrorFirstNameRequired)"
                            },
                            LastName: {
                                required: "@Html.Raw(UserViewModelErrors.ErrorLastNameRequired)"
                            },
                            UserName: {
                                required: "@Html.Raw(UserViewModelErrors.ErrorUserNameRequired)"
                            },
                            Email: {
                                required: "@Html.Raw(UserViewModelErrors.ErrorEmailRequired)"
                            },
                            Password1: {
                                required: "@Html.Raw(UserViewModelErrors.ErrorPasswordRequired1)"
                            },
                            Password2: {
                                required: "@Html.Raw(UserViewModelErrors.ErrorPasswordRequired2)",
                                equalto: "@Html.Raw(UserViewModelErrors.ErrorPasswordNotIdentical)"
                            }
                        },

                        submitHandler: function(form) {
                            form.submit();
                        }
                    });
                });
            </script>
        </div>
    </div>
</div>
